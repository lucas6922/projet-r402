/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.but.parkour.openapitools.client.apis.genere

import io.kotlintest.specs.ShouldSpec

class CompetitorsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CompetitorsApi
        //val apiInstance = CompetitorsApi()

        // to test deleteCompetitor
        should("test deleteCompetitor") {
            // uncomment below to test deleteCompetitor
            //val id : kotlin.Int = 56 // kotlin.Int | Competitor ID in the database
            //apiInstance.deleteCompetitor(id)
        }

        // to test getCompetitorDetails
        should("test getCompetitorDetails") {
            // uncomment below to test getCompetitorDetails
            //val id : kotlin.Int = 56 // kotlin.Int | Competitor ID in the database
            //val result : Competitor = apiInstance.getCompetitorDetails(id)
            //result shouldBe ("TODO")
        }

        // to test getCompetitorPerformanceDetails
        should("test getCompetitorPerformanceDetails") {
            // uncomment below to test getCompetitorPerformanceDetails
            //val UNKNOWN_PARAMETER_NAME :  =  //  | Competitor ID in the database
            //val UNKNOWN_PARAMETER_NAME2 :  =  //  | Course ID in the database
            //val result : kotlin.collections.List<PerformanceObstacle> = apiInstance.getCompetitorPerformanceDetails(UNKNOWN_PARAMETER_NAME, UNKNOWN_PARAMETER_NAME2)
            //result shouldBe ("TODO")
        }

        // to test listCompetitorCourses
        should("test listCompetitorCourses") {
            // uncomment below to test listCompetitorCourses
            //val UNKNOWN_PARAMETER_NAME :  =  //  | Competitor ID in the database
            //val result : kotlin.collections.List<Course> = apiInstance.listCompetitorCourses(UNKNOWN_PARAMETER_NAME)
            //result shouldBe ("TODO")
        }

        // to test listCompetitorPerformances
        should("test listCompetitorPerformances") {
            // uncomment below to test listCompetitorPerformances
            //val UNKNOWN_PARAMETER_NAME :  =  //  | Competitor ID in the database
            //val result : kotlin.collections.List<Performance> = apiInstance.listCompetitorPerformances(UNKNOWN_PARAMETER_NAME)
            //result shouldBe ("TODO")
        }

        // to test listCompetitors
        should("test listCompetitors") {
            // uncomment below to test listCompetitors
            //val result : kotlin.collections.List<Competitor> = apiInstance.listCompetitors()
            //result shouldBe ("TODO")
        }

        // to test storeCompetitor
        should("test storeCompetitor") {
            // uncomment below to test storeCompetitor
            //val competitorCreate : CompetitorCreate =  // CompetitorCreate | Competitor's informations
            //val result : Competitor = apiInstance.storeCompetitor(competitorCreate)
            //result shouldBe ("TODO")
        }

        // to test updateCompetitor
        should("test updateCompetitor") {
            // uncomment below to test updateCompetitor
            //val id : kotlin.Int = 56 // kotlin.Int | Competitor ID in the database
            //val competitorUpdate : CompetitorUpdate =  // CompetitorUpdate | Updating competitors informations
            //apiInstance.updateCompetitor(id, competitorUpdate)
        }

    }
}
